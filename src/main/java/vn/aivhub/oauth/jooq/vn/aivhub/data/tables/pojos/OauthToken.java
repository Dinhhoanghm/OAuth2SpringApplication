/*
 * This file is generated by jOOQ.
 */
package vn.aivhub.data.tables.pojos;


import java.io.Serializable;
import java.time.LocalDateTime;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class OauthToken implements Serializable {

    private static final long serialVersionUID = 1L;

    private Integer       id;
    private String        refreshToken;
    private String        accessToken;
    private Integer       userId;
    private LocalDateTime accessExpirationTime;
    private LocalDateTime refreshExpirationTime;

    public OauthToken() {}

    public OauthToken(OauthToken value) {
        this.id = value.id;
        this.refreshToken = value.refreshToken;
        this.accessToken = value.accessToken;
        this.userId = value.userId;
        this.accessExpirationTime = value.accessExpirationTime;
        this.refreshExpirationTime = value.refreshExpirationTime;
    }

    public OauthToken(
        Integer       id,
        String        refreshToken,
        String        accessToken,
        Integer       userId,
        LocalDateTime accessExpirationTime,
        LocalDateTime refreshExpirationTime
    ) {
        this.id = id;
        this.refreshToken = refreshToken;
        this.accessToken = accessToken;
        this.userId = userId;
        this.accessExpirationTime = accessExpirationTime;
        this.refreshExpirationTime = refreshExpirationTime;
    }

    /**
     * Getter for <code>public.oauth_token.id</code>.
     */
    public Integer getId() {
        return this.id;
    }

    /**
     * Setter for <code>public.oauth_token.id</code>.
     */
    public OauthToken setId(Integer id) {
        this.id = id;
        return this;
    }

    /**
     * Getter for <code>public.oauth_token.refresh_token</code>.
     */
    public String getRefreshToken() {
        return this.refreshToken;
    }

    /**
     * Setter for <code>public.oauth_token.refresh_token</code>.
     */
    public OauthToken setRefreshToken(String refreshToken) {
        this.refreshToken = refreshToken;
        return this;
    }

    /**
     * Getter for <code>public.oauth_token.access_token</code>.
     */
    public String getAccessToken() {
        return this.accessToken;
    }

    /**
     * Setter for <code>public.oauth_token.access_token</code>.
     */
    public OauthToken setAccessToken(String accessToken) {
        this.accessToken = accessToken;
        return this;
    }

    /**
     * Getter for <code>public.oauth_token.user_id</code>.
     */
    public Integer getUserId() {
        return this.userId;
    }

    /**
     * Setter for <code>public.oauth_token.user_id</code>.
     */
    public OauthToken setUserId(Integer userId) {
        this.userId = userId;
        return this;
    }

    /**
     * Getter for <code>public.oauth_token.access_expiration_time</code>.
     */
    public LocalDateTime getAccessExpirationTime() {
        return this.accessExpirationTime;
    }

    /**
     * Setter for <code>public.oauth_token.access_expiration_time</code>.
     */
    public OauthToken setAccessExpirationTime(LocalDateTime accessExpirationTime) {
        this.accessExpirationTime = accessExpirationTime;
        return this;
    }

    /**
     * Getter for <code>public.oauth_token.refresh_expiration_time</code>.
     */
    public LocalDateTime getRefreshExpirationTime() {
        return this.refreshExpirationTime;
    }

    /**
     * Setter for <code>public.oauth_token.refresh_expiration_time</code>.
     */
    public OauthToken setRefreshExpirationTime(LocalDateTime refreshExpirationTime) {
        this.refreshExpirationTime = refreshExpirationTime;
        return this;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final OauthToken other = (OauthToken) obj;
        if (id == null) {
            if (other.id != null)
                return false;
        }
        else if (!id.equals(other.id))
            return false;
        if (refreshToken == null) {
            if (other.refreshToken != null)
                return false;
        }
        else if (!refreshToken.equals(other.refreshToken))
            return false;
        if (accessToken == null) {
            if (other.accessToken != null)
                return false;
        }
        else if (!accessToken.equals(other.accessToken))
            return false;
        if (userId == null) {
            if (other.userId != null)
                return false;
        }
        else if (!userId.equals(other.userId))
            return false;
        if (accessExpirationTime == null) {
            if (other.accessExpirationTime != null)
                return false;
        }
        else if (!accessExpirationTime.equals(other.accessExpirationTime))
            return false;
        if (refreshExpirationTime == null) {
            if (other.refreshExpirationTime != null)
                return false;
        }
        else if (!refreshExpirationTime.equals(other.refreshExpirationTime))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.refreshToken == null) ? 0 : this.refreshToken.hashCode());
        result = prime * result + ((this.accessToken == null) ? 0 : this.accessToken.hashCode());
        result = prime * result + ((this.userId == null) ? 0 : this.userId.hashCode());
        result = prime * result + ((this.accessExpirationTime == null) ? 0 : this.accessExpirationTime.hashCode());
        result = prime * result + ((this.refreshExpirationTime == null) ? 0 : this.refreshExpirationTime.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("OauthToken (");

        sb.append(id);
        sb.append(", ").append(refreshToken);
        sb.append(", ").append(accessToken);
        sb.append(", ").append(userId);
        sb.append(", ").append(accessExpirationTime);
        sb.append(", ").append(refreshExpirationTime);

        sb.append(")");
        return sb.toString();
    }
}
