/*
 * This file is generated by jOOQ.
 */
package vn.aivhub.data.tables;


import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row3;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;

import vn.aivhub.data.Public;
import vn.aivhub.data.tables.records.AccountVerifycationRecord;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AccountVerifycation extends TableImpl<AccountVerifycationRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>public.account_verifycation</code>
     */
    public static final AccountVerifycation ACCOUNT_VERIFYCATION = new AccountVerifycation();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<AccountVerifycationRecord> getRecordType() {
        return AccountVerifycationRecord.class;
    }

    /**
     * The column <code>public.account_verifycation.id</code>.
     */
    public static final TableField<AccountVerifycationRecord, String> ID = createField(DSL.name("id"), SQLDataType.VARCHAR(300), ACCOUNT_VERIFYCATION, "");

    /**
     * The column <code>public.account_verifycation.user_id</code>.
     */
    public static final TableField<AccountVerifycationRecord, Integer> USER_ID = createField(DSL.name("user_id"), SQLDataType.INTEGER, ACCOUNT_VERIFYCATION, "");

    /**
     * The column <code>public.account_verifycation.created_at</code>.
     */
    public static final TableField<AccountVerifycationRecord, LocalDateTime> CREATED_AT = createField(DSL.name("created_at"), SQLDataType.LOCALDATETIME(6), ACCOUNT_VERIFYCATION, "");

    private AccountVerifycation(Name alias, Table<AccountVerifycationRecord> aliased) {
        this(alias, aliased, null);
    }

    private AccountVerifycation(Name alias, Table<AccountVerifycationRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * No further instances allowed
     */
    private AccountVerifycation() {
        this(DSL.name("account_verifycation"), null);
    }

    public <O extends Record> AccountVerifycation(Table<O> child, ForeignKey<O, AccountVerifycationRecord> key) {
        super(child, key, ACCOUNT_VERIFYCATION);
    }

    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    // -------------------------------------------------------------------------
    // Row3 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row3<String, Integer, LocalDateTime> fieldsRow() {
        return (Row3) super.fieldsRow();
    }
}
