/*
 * This file is generated by jOOQ.
 */
package vn.aivhub.data.tables;


import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row7;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;

import vn.aivhub.data.Keys;
import vn.aivhub.data.Public;
import vn.aivhub.data.tables.records.BillingHistoryRecord;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BillingHistory extends TableImpl<BillingHistoryRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>public.billing_history</code>
     */
    public static final BillingHistory BILLING_HISTORY = new BillingHistory();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<BillingHistoryRecord> getRecordType() {
        return BillingHistoryRecord.class;
    }

    /**
     * The column <code>public.billing_history.id</code>.
     */
    public static final TableField<BillingHistoryRecord, Integer> ID = createField(DSL.name("id"), SQLDataType.INTEGER.nullable(false).identity(true), BILLING_HISTORY, "");

    /**
     * The column <code>public.billing_history.plan_user_id</code>.
     */
    public static final TableField<BillingHistoryRecord, Integer> PLAN_USER_ID = createField(DSL.name("plan_user_id"), SQLDataType.INTEGER, BILLING_HISTORY, "");

    /**
     * The column <code>public.billing_history.status</code>.
     */
    public static final TableField<BillingHistoryRecord, String> STATUS = createField(DSL.name("status"), SQLDataType.VARCHAR, BILLING_HISTORY, "");

    /**
     * The column <code>public.billing_history.created_at</code>.
     */
    public static final TableField<BillingHistoryRecord, LocalDateTime> CREATED_AT = createField(DSL.name("created_at"), SQLDataType.LOCALDATETIME(6).defaultValue(DSL.field("now()", SQLDataType.LOCALDATETIME)), BILLING_HISTORY, "");

    /**
     * The column <code>public.billing_history.paid_at</code>.
     */
    public static final TableField<BillingHistoryRecord, LocalDateTime> PAID_AT = createField(DSL.name("paid_at"), SQLDataType.LOCALDATETIME(6), BILLING_HISTORY, "");

    /**
     * The column <code>public.billing_history.amount</code>.
     */
    public static final TableField<BillingHistoryRecord, Double> AMOUNT = createField(DSL.name("amount"), SQLDataType.DOUBLE, BILLING_HISTORY, "");

    /**
     * The column <code>public.billing_history.session_id</code>.
     */
    public static final TableField<BillingHistoryRecord, String> SESSION_ID = createField(DSL.name("session_id"), SQLDataType.VARCHAR(300), BILLING_HISTORY, "");

    private BillingHistory(Name alias, Table<BillingHistoryRecord> aliased) {
        this(alias, aliased, null);
    }

    private BillingHistory(Name alias, Table<BillingHistoryRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * No further instances allowed
     */
    private BillingHistory() {
        this(DSL.name("billing_history"), null);
    }

    public <O extends Record> BillingHistory(Table<O> child, ForeignKey<O, BillingHistoryRecord> key) {
        super(child, key, BILLING_HISTORY);
    }

    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    @Override
    public Identity<BillingHistoryRecord, Integer> getIdentity() {
        return (Identity<BillingHistoryRecord, Integer>) super.getIdentity();
    }

    @Override
    public UniqueKey<BillingHistoryRecord> getPrimaryKey() {
        return Keys.BILLING_HISTORY_PK;
    }

    @Override
    public List<UniqueKey<BillingHistoryRecord>> getKeys() {
        return Arrays.<UniqueKey<BillingHistoryRecord>>asList(Keys.BILLING_HISTORY_PK);
    }

    // -------------------------------------------------------------------------
    // Row7 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row7<Integer, Integer, String, LocalDateTime, LocalDateTime, Double, String> fieldsRow() {
        return (Row7) super.fieldsRow();
    }
}
