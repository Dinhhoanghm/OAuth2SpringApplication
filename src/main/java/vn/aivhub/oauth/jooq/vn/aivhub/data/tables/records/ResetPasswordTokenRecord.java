/*
 * This file is generated by jOOQ.
 */
package vn.aivhub.data.tables.records;


import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;

import vn.aivhub.data.tables.ResetPasswordToken;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ResetPasswordTokenRecord extends UpdatableRecordImpl<ResetPasswordTokenRecord> implements Record5<Integer, Integer, LocalDateTime, LocalDateTime, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.reset_password_token.id</code>.
     */
    public ResetPasswordTokenRecord setId(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.reset_password_token.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.reset_password_token.user_id</code>.
     */
    public ResetPasswordTokenRecord setUserId(Integer value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.reset_password_token.user_id</code>.
     */
    public Integer getUserId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>public.reset_password_token.created_at</code>.
     */
    public ResetPasswordTokenRecord setCreatedAt(LocalDateTime value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.reset_password_token.created_at</code>.
     */
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(2);
    }

    /**
     * Setter for <code>public.reset_password_token.expiration_time</code>.
     */
    public ResetPasswordTokenRecord setExpirationTime(LocalDateTime value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.reset_password_token.expiration_time</code>.
     */
    public LocalDateTime getExpirationTime() {
        return (LocalDateTime) get(3);
    }

    /**
     * Setter for <code>public.reset_password_token.token</code>.
     */
    public ResetPasswordTokenRecord setToken(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>public.reset_password_token.token</code>.
     */
    public String getToken() {
        return (String) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<Integer, Integer, LocalDateTime, LocalDateTime, String> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<Integer, Integer, LocalDateTime, LocalDateTime, String> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return ResetPasswordToken.ID;
    }

    @Override
    public Field<Integer> field2() {
        return ResetPasswordToken.USER_ID;
    }

    @Override
    public Field<LocalDateTime> field3() {
        return ResetPasswordToken.CREATED_AT;
    }

    @Override
    public Field<LocalDateTime> field4() {
        return ResetPasswordToken.EXPIRATION_TIME;
    }

    @Override
    public Field<String> field5() {
        return ResetPasswordToken.TOKEN;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public Integer component2() {
        return getUserId();
    }

    @Override
    public LocalDateTime component3() {
        return getCreatedAt();
    }

    @Override
    public LocalDateTime component4() {
        return getExpirationTime();
    }

    @Override
    public String component5() {
        return getToken();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public Integer value2() {
        return getUserId();
    }

    @Override
    public LocalDateTime value3() {
        return getCreatedAt();
    }

    @Override
    public LocalDateTime value4() {
        return getExpirationTime();
    }

    @Override
    public String value5() {
        return getToken();
    }

    @Override
    public ResetPasswordTokenRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public ResetPasswordTokenRecord value2(Integer value) {
        setUserId(value);
        return this;
    }

    @Override
    public ResetPasswordTokenRecord value3(LocalDateTime value) {
        setCreatedAt(value);
        return this;
    }

    @Override
    public ResetPasswordTokenRecord value4(LocalDateTime value) {
        setExpirationTime(value);
        return this;
    }

    @Override
    public ResetPasswordTokenRecord value5(String value) {
        setToken(value);
        return this;
    }

    @Override
    public ResetPasswordTokenRecord values(Integer value1, Integer value2, LocalDateTime value3, LocalDateTime value4, String value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ResetPasswordTokenRecord
     */
    public ResetPasswordTokenRecord() {
        super(ResetPasswordToken.RESET_PASSWORD_TOKEN);
    }

    /**
     * Create a detached, initialised ResetPasswordTokenRecord
     */
    public ResetPasswordTokenRecord(Integer id, Integer userId, LocalDateTime createdAt, LocalDateTime expirationTime, String token) {
        super(ResetPasswordToken.RESET_PASSWORD_TOKEN);

        setId(id);
        setUserId(userId);
        setCreatedAt(createdAt);
        setExpirationTime(expirationTime);
        setToken(token);
    }
}
